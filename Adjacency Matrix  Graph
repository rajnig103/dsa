class Graph {
    constructor (vertices) {
        this.numvertices = vertices;
        this.matrix = Array.from({ length: vertices }, () => Array(vertices).fill(0));
    }

    addEdge(src, dest) {
        if (src > 0 && src < this.numvertices && dest > 0 && dest < this.numvertices) {
            this.matrix[src][dest] = 1;
            this.matrix[dest][src] = 1;
            this.numvertices++;
        } else {
            console.warn("Vertices are out of range.");
        }
    }
    removeEdge(src, dest) {
        if (src > 0 && src < this.numvertices && dest > 0 && dest < this.numvertices) {
            this.matrix[src][dest] = 0;
            this.matrix[dest][src] = 0;
            this.numvertices--;
        } else {
            console.warn("Vertices are out of range.");
        }
    }
    removeVertex(vertex) {
        if (vertex >= 0 && vertex < this.numvertices) {
            for (let i = 0; i < this.numvertices; i++) {
                this.matrix[vertex][i] = 0;
                this.matrix[i][vertex] = 0;
            }
        } else {
            console.warn("Vertex are out of range.");
        }
    }
    addVertex(vertex) {
        if (vertex >= 0 && vertex < this.numvertices) {
            for (let i = 0; i < this.numvertices; i++) {
                this.matrix[vertex][i] = 1;
                this.matrix[i][vertex] = 1;
            }
        } else {
            console.warn("Vertex are out of range.");
        }
    }
    printMatrix() {
        for (let i = 0; i < this.numvertices; i++) {
            if (this.matrix[i]) {
                console.log(this.matrix[i].join(" "));
            }
        }
    }
}
const numVertices = 5; // Number of vertices in the graph
const graph = new Graph(numVertices);

// Adding edges
graph.addEdge(0, 1);
graph.addEdge(0, 4);
graph.addEdge(1, 2);
graph.addEdge(1, 3);
graph.addEdge(1, 4);
graph.addEdge(2, 3);
graph.addEdge(3, 4);

console.log("Adjacency matrix after adding edges:");
graph.printMatrix();

// Removing an edge
graph.removeEdge(1, 2);

console.log("\nAdjacency matrix after removing edge (1, 2):");
graph.printMatrix();

// Removing a vertex
graph.removeVertex(4);

console.log("\nAdjacency matrix after removing vertex 4:");
graph.printMatrix();
